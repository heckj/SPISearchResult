name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  iOS:
    runs-on: macos-13
    strategy:
      matrix:
        xcode:
          - { version: '15.0', sim: '', sdk: '' }
    steps:
      - uses: actions/checkout@v3
      - name: list the available versions of Xcode
        run: ls -al /Applications/Xcode*
      - name: show sdks for this Xcode version
        run: env DEVELOPER_DIR="/Applications/Xcode_${{ matrix.xcode.version }}.app" xcodebuild -showsdks
      - name: show destinations for this Xcode version
        run: env DEVELOPER_DIR="/Applications/Xcode_${{ matrix.xcode.version }}.app" xcodebuild -scheme 'SPISearchResult' -showdestinations
      - name: Test
        run: env DEVELOPER_DIR="/Applications/Xcode_${{ matrix.xcode.version }}.app" xcodebuild clean test -scheme 'SPISearchResult' -destination 'platform=iOS Simulator,OS=16.4,name=iPhone 8' -sdk iphonesimulator16.4 -showBuildTimingSummary

  macOS:
    # https://github.com/actions/runner-images
    runs-on: macos-13
    strategy:
      matrix:
        xcode: ['15.0', '14.3.1']
    steps:
      - uses: actions/checkout@v3
      - run: git config --global user.email "me@example.com"
      - run: git config --global user.name "Name"
      - name: Get swift version
        run: env DEVELOPER_DIR="/Applications/Xcode_${{ matrix.xcode }}.app" swift --version
      - name: Test
        run: env DEVELOPER_DIR="/Applications/Xcode_${{ matrix.xcode }}.app" swift test
      - name: Build release
        run: env DEVELOPER_DIR="/Applications/Xcode_${{ matrix.xcode }}.app" swift build -c release

  Linux:
    # https://github.com/actions/runner-images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [
          'swift:5.8',
          'swift:5.9'
        ]
    container:
      image: ${{ matrix.image }}
    steps:
      - uses: actions/checkout@v3
      - run: git config --global user.email "me@example.com"
      - run: git config --global user.name "Name"
      - name: Get swift version
        run: swift --version
      - name: Test
        run: swift test
      - name: Build release
        run: swift build -c release
